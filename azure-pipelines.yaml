trigger:
- master

stages:
- stage: "Create_Infrastructure"
  jobs:
  - job: provision
    displayName: 'Provision Infrastructure'
    pool:
      vmimage: 'ubuntu-18.04'
    steps:
    
    - task: DownloadSecureFile@1
      displayName: Download Terraform Variables file
      name: tfvars
      inputs:
        secureFile: 'terraform.tfvars'
    
    - script: |
        sudo cp $(tfvars.secureFilePath) terraform/environments/test/terraform.tfvars
      displayName: Copy terraform.tfvars File
      
    - task: CmdLine@2
      displayName: Install Terraform
      inputs:
        script: |
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt install terraform=0.14.8

    - task: CmdLine@2
      displayName: Terraform Init
      inputs:
        script: |
          terraform init
        workingDirectory: terraform/environments/test/

    - task: CmdLine@2
      displayName: Terraform Apply
      inputs:
        script: |
          terraform apply -auto-approve
        workingDirectory: terraform/environments/test/

# - stage: Build
#   jobs:
#   - job: Build
#     pool:
#       vmImage: 'ubuntu-18.04'
#     steps:
#     # Needed for Terraform VM deployment
#     # - task: InstallSSHKey@0
#     #   inputs:
#     #     knownHostsEntry: 'KNOWN_HOSTS_STRING'
#     #     sshPublicKey: 'PUBLIC_KEY'
#     #     sshKeySecureFile: 'id_rsa'
#     - task: ArchiveFiles@2
#       displayName: 'Archive FakeRestAPI'
#       inputs:
#         rootFolderOrFile: 'path/to/fakerestapi'
#         includeRootFolder: false
#         archiveType: 'zip'
#         archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip'
#     - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId)-fakerestapi.zip
#       displayName: 'Upload Package'
#       artifact: drop-fakerestapi
# - stage:
#   jobs:
#   - deployment: FakeRestAPI
#     pool:
#       vmImage: 'Ubuntu-18.04'
#     environment: 'TEST'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: 'Deploy Azure Web App'
#             inputs:
#               azureSubscription: ''
#               appName: ''
#               appType: webApp
#               package: $(Pipeline.Workspace)/drop-fakerestapi/$(Build.BuildId)-fakerestapi.zip
  # - deployment: VMDeploy
  #   displayName: NAME
  #   environment:
  #     name:  ENVIRONMENT NAME
  #     resourceType: VirtualMachine
  #     tags: TAG NAME
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #         - task: Bash@3
  #           inputs:
  #             targetType: 'inline'
  #             script: |
  #               #! /bin/bash
                
  #               sudo apt-get upgrade -y
  #               sudo apt-get install python3-pip -y
  #               sudo apt-get install unzip -y
  #               sudo apt-get install -y chromium-browser
  #               pip3 install selenium
  #               export PATH=$PATH:some/path


